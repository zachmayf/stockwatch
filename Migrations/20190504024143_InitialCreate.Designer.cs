// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockWatch.Models;

namespace StockWatch.Migrations
{
    [DbContext(typeof(StockWatchContext))]
    [Migration("20190504024143_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("StockWatch.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Balance");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("StockWatch.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountId");

                    b.Property<string>("NameOfCompany");

                    b.Property<int>("SharesOwned");

                    b.Property<string>("Ticker");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("StockWatch.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountId");

                    b.Property<float>("PurchasePrice");

                    b.Property<float>("SellPrice");

                    b.Property<int?>("StockPurchasedId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("StockPurchasedId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("StockWatch.Models.Stock", b =>
                {
                    b.HasOne("StockWatch.Models.Account")
                        .WithMany("StocksHeld")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("StockWatch.Models.Transaction", b =>
                {
                    b.HasOne("StockWatch.Models.Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId");

                    b.HasOne("StockWatch.Models.Stock", "StockPurchased")
                        .WithMany()
                        .HasForeignKey("StockPurchasedId");
                });
#pragma warning restore 612, 618
        }
    }
}
